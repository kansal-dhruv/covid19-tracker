{"version":3,"sources":["api/api.js","components/CardComponent.jsx","components/ChartComponent.jsx","App.js","index.js"],"names":["link","link_co","fetchData","a","fetch","response","json","data","response_co","data_co","conf_inc","length","confirmed","total","death_inc","deaths","increase_confirmed","value","increase_deaths","fetchDaily","CardComponent","df","this","props","console","log","className","Grid","container","spacing","justify","Card","CardContent","Typography","color","align","start","end","separator","duration","Date","lastUpdate","toDateString","recovered","Component","ChartComponent","state","setState","arr","map","dd","reportDate","chart","labels","datasets","totalConfirmed","label","borderColor","fill","App","ReactDOM","render","document","getElementById"],"mappings":"wQAAMA,EAAK,iCACLC,EAAQ,uCACP,SAAeC,IAAtB,+B,4CAAO,sCAAAC,EAAA,sEACkBC,MAAMJ,GADxB,cACCK,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,gBAGqBH,MAAMH,GAH3B,cAGCO,EAHD,iBAIiBA,EAAYF,OAJ7B,eAICG,EAJD,OAKGC,EAASD,EAAQA,EAAQE,OAAO,GAAGC,UAAUC,MAC7CC,EAAUL,EAAQA,EAAQE,OAAO,GAAGI,OAAOF,MAGjDN,EAAK,2BAAIA,GAAL,IAAUS,mBAAmBT,EAAKK,UAAUK,MAAQP,EAASQ,gBAAgBX,EAAKQ,OAAOE,MAAMH,IAThG,kBAUIP,GAVJ,6C,sBAYA,SAAeY,IAAtB,+B,4CAAO,8BAAAhB,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAIIA,GAJJ,4C,+EC+BQa,G,6KAtCH,IAAMC,EAAGC,KAAKC,MAAMA,MAEpB,OADAC,QAAQC,IAAIJ,GAER,yBAAKK,UAAU,eACf,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAChC,kBAACC,EAAA,EAAD,CAAML,UAAU,mBAChB,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAAlB,YACA,kBAACD,EAAA,EAAD,CAAYE,MAAM,QAAlB,2BACA,kBAACF,EAAA,EAAD,CAAYE,MAAM,QAAO,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKhB,EAAGT,UAAUK,MAAOqB,UAAU,IAAIC,SAAU,IAA7F,OAAsG,kBAAC,IAAD,CAAUH,MAAO,EAAGC,IAAKhB,EAAGL,mBAAoBsB,UAAU,MAAhK,KACA,kBAACL,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,QAAxC,iBAA8D,IAAIK,KAAKnB,EAAGoB,YAAYC,kBAI1F,kBAACX,EAAA,EAAD,CAAML,UAAU,iBAChB,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAAlB,UACA,kBAACD,EAAA,EAAD,CAAYE,MAAM,QAAlB,2BACA,kBAACF,EAAA,EAAD,CAAYE,MAAM,QAAQ,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKhB,EAAGN,OAAOE,MAAOqB,UAAU,IAAIC,SAAU,IAA3F,OAAmG,kBAAC,IAAD,CAASH,MAAO,EAAGC,IAAKhB,EAAGH,gBAAiBoB,UAAU,MAAzJ,KAEA,kBAACL,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,QAAxC,iBAA8D,IAAIK,KAAKnB,EAAGoB,YAAYC,kBAG1F,kBAACX,EAAA,EAAD,CAAML,UAAU,oBAChB,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAAlB,aACA,kBAACD,EAAA,EAAD,CAAYE,MAAM,QAAlB,2BACA,kBAACF,EAAA,EAAD,CAAYE,MAAM,QAAQ,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKhB,EAAGsB,UAAU1B,MAAOqB,UAAU,IAAIC,SAAU,KAC9F,kBAACN,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,QAAxC,iBAA8D,IAAIK,KAAKnB,EAAGoB,YAAYC,wB,GA9BlFE,c,QC+CbC,G,yDA/CX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPvC,KAAM,MAHD,E,gMAOMY,I,OAAXZ,E,OACJiB,QAAQC,IAAIlB,GACZe,KAAKyB,SAAS,CAACxC,S,yIAENyC,GACTA,EAAIC,KAAI,SAACC,GAAD,OAAO1B,QAAQC,IAAIyB,EAAGC,iB,+BAQ9B,GAAqB,OAAlB7B,KAAKwB,MAAMvC,KACV,OAAQ,8BAGRiB,QAAQC,IAAIH,KAAKwB,MAAMvC,MACvB,IAAI6C,EACA,kBAAC,OAAD,CAAM7C,KAAM,CACR8C,OAAO/B,KAAKwB,MAAMvC,KAAK0C,KAAI,SAACC,GAAD,OAAMA,EAAGC,cACpCG,SAAU,CAAC,CACP/C,KAAMe,KAAKwB,MAAMvC,KAAK0C,KAAI,SAACC,GAAD,OAAMA,EAAGK,kBACnCC,MAAM,WACNC,YAAa,QACbC,MAAM,GACR,CACEnD,KAAMe,KAAKwB,MAAMvC,KAAK0C,KAAI,SAACC,GAAD,OAAMA,EAAGnC,OAAOF,SAC1C2C,MAAM,SACNC,YAAa,MACbC,MAAM,OAMlB,OAAO,6BAAMN,O,GA5CIR,cC4Bde,E,kDA1Bb,aAAc,IAAD,8BACX,gBACKb,MAAM,CACTzB,GAAI,MAHK,E,gMAQEnB,I,OAATmB,E,OACJC,KAAKyB,SAAS,CAAC1B,O,qIAIf,OAAkB,MAAfC,KAAKwB,MAAMzB,GACL,8BAGP,yBAAKK,UAAU,OACb,kBAAC,EAAD,CAAeH,MAAOD,KAAKwB,MAAMzB,KACjC,kBAAC,EAAD,W,GApBUuB,aCAlBgB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c80eddd3.chunk.js","sourcesContent":["const link=\"https://covid19.mathdro.id/api\";\nconst link_co=\"https://covid19.mathdro.id/api/daily\";\nexport async function fetchData(){\n    let response = await fetch(link);\n    let data = await response.json();\n    let response_co = await fetch(link_co);\n    let data_co = await response_co.json(); \n    const conf_inc=data_co[data_co.length-1].confirmed.total;\n    const death_inc=data_co[data_co.length-1].deaths.total;\n    // console.log(data);\n    // console.log(data_co);\n    data={...data,increase_confirmed:data.confirmed.value - conf_inc,increase_deaths:data.deaths.value-death_inc};\n    return data;\n}\nexport async function fetchDaily(){\n    let response = await fetch(link_co);\n    let data = await response.json();\n    // console.log(data);\n    return data;\n\n}","import React, { Component } from 'react'\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\n// import styles from '.src/components/CardComponent.module.css'\nimport './CardComponent.css'\nclass CardComponent extends Component{\n    render(){\n            const df=this.props.props;\n            console.log(df);\n            return(\n                <div className=\"container-m\">\n                <Grid container spacing={3} justify='center'>\n                    <Card className=\"card-m infected\">\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Infected</Typography>\n                        <Typography align=\"left\">No. of cases confirmed:</Typography>\n                        <Typography align=\"left\"><CountUp start={0} end={df.confirmed.value} separator=\",\" duration={2} /> (+ <CountUp  start={0} end={df.increase_confirmed} separator=\",\"/>)</Typography>\n                        <Typography color=\"textSecondary\" align=\"left\">Last Updated: {new Date(df.lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                    </Card>\n\n                    <Card className=\"card-m deaths\">\n                    <CardContent >\n                        <Typography color=\"textSecondary\">Deaths</Typography>\n                        <Typography align=\"left\">No. of cases confirmed:</Typography>\n                        <Typography align=\"left\" ><CountUp start={0} end={df.deaths.value} separator=\",\" duration={2}/> (+ <CountUp start={0} end={df.increase_deaths} separator=\",\"/>)\n                        </Typography>\n                        <Typography color=\"textSecondary\" align=\"left\">Last Updated: {new Date(df.lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                    </Card>\n                    <Card className=\"card-m recovered\">\n                    <CardContent >\n                        <Typography color=\"textSecondary\">Recovered</Typography>\n                        <Typography align=\"left\">No. of cases confirmed:</Typography>\n                        <Typography align=\"left\" ><CountUp start={0} end={df.recovered.value} separator=\",\" duration={2}/></Typography>\n                        <Typography color=\"textSecondary\" align=\"left\">Last Updated: {new Date(df.lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                    </Card>\n                </Grid>\n                </div>\n            )\n    }\n}\n\n\nexport default CardComponent;\n\n","import React, {Component} from 'react';\nimport {fetchDaily} from '../api/api.js'\nimport {Line,Bar} from 'react-chartjs-2';\nimport './ChartComponent.css';\nclass ChartComponent extends Component{\n    constructor(){\n        super();\n        this.state={\n            data: null,\n        };\n    }\n    async componentDidMount(){\n        let data=await fetchDaily();\n        console.log(data);\n        this.setState({data});\n    }\n    label_create(arr){\n        arr.map((dd)=> console.log(dd.reportDate));\n        // for(let i=0;i<arr.length;i++)\n        // {\n        //     console.log(i);\n        //     console.log(arr[i]);\n        // }\n    };\n    render(){\n        if(this.state.data===null)\n            return (<div></div>)\n        else\n        {\n            console.log(this.state.data);\n            let chart=(\n                <Line data={{\n                    labels:this.state.data.map((dd)=>dd.reportDate),\n                    datasets: [{\n                        data: this.state.data.map((dd)=>dd.totalConfirmed),\n                        label:'Infected',\n                        borderColor: 'black',\n                        fill: false,\n                    },{\n                        data: this.state.data.map((dd)=>dd.deaths.total),\n                        label:'Deaths',\n                        borderColor: 'red',\n                        fill: false,\n                    }\n                ]\n                }}\n                 />\n            );\n            return <div>{chart}</div>\n        }\n    }\n}\nexport default ChartComponent;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {fetchData} from './api/api.js';\nimport CardComponent from './components/CardComponent.jsx';\nimport ChartComponent from './components/ChartComponent.jsx';\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      df: null,\n    }\n  }\n\n  async componentDidMount(){\n    let df=await fetchData();\n    this.setState({df});\n\n  }\n  render(){\n    if(this.state.df==null)\n      return(<div></div>);\n    else{\n      return (\n      <div className=\"App\">\n        <CardComponent props={this.state.df} /> \n        <ChartComponent></ChartComponent> \n      </div>\n    )\n      }\n};\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}