{"version":3,"sources":["api/api.js","components/CardComponent.jsx","App.js","index.js"],"names":["link","link_co","fetchData","a","fetch","response","json","data","response_co","data_co","conf_inc","length","confirmed","total","death_inc","deaths","console","log","increase_confirmed","value","increase_deaths","CardComponent","df","this","props","className","Grid","container","spacing","justify","Card","CardContent","Typography","color","align","start","end","separator","duration","Date","lastUpdate","toDateString","recovered","Component","App","state","setState","ReactDOM","render","document","getElementById"],"mappings":"oVAAMA,EAAK,iCACLC,EAAQ,uCACP,SAAeC,IAAtB,+B,4CAAO,sCAAAC,EAAA,sEACkBC,MAAMJ,GADxB,cACCK,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,gBAGqBH,MAAMH,GAH3B,cAGCO,EAHD,iBAIiBA,EAAYF,OAJ7B,eAICG,EAJD,OAKGC,EAASD,EAAQA,EAAQE,OAAO,GAAGC,UAAUC,MAC7CC,EAAUL,EAAQA,EAAQE,OAAO,GAAGI,OAAOF,MAEjDG,QAAQC,IAAIR,GACZF,EAAK,2BAAIA,GAAL,IAAUW,mBAAmBX,EAAKK,UAAUO,MAAQT,EAASU,gBAAgBb,EAAKQ,OAAOI,MAAML,IAThG,kBAUIP,GAVJ,6C,0EC2CQc,G,6KAtCH,IAAMC,EAAGC,KAAKC,MAAMA,MAEpB,OADAR,QAAQC,IAAIK,GAER,yBAAKG,UAAU,eACf,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,UAChC,kBAACC,EAAA,EAAD,CAAML,UAAU,mBAChB,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAAlB,YACA,kBAACD,EAAA,EAAD,CAAYE,MAAM,QAAlB,2BACA,kBAACF,EAAA,EAAD,CAAYE,MAAM,QAAO,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKd,EAAGV,UAAUO,MAAOkB,UAAU,IAAIC,SAAU,IAA7F,OAAsG,kBAAC,IAAD,CAAUH,MAAO,EAAGC,IAAKd,EAAGJ,mBAAoBmB,UAAU,MAAhK,KACA,kBAACL,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,QAAxC,iBAA8D,IAAIK,KAAKjB,EAAGkB,YAAYC,kBAI1F,kBAACX,EAAA,EAAD,CAAML,UAAU,iBAChB,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAAlB,UACA,kBAACD,EAAA,EAAD,CAAYE,MAAM,QAAlB,2BACA,kBAACF,EAAA,EAAD,CAAYE,MAAM,QAAQ,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKd,EAAGP,OAAOI,MAAOkB,UAAU,IAAIC,SAAU,IAA3F,OAAmG,kBAAC,IAAD,CAASH,MAAO,EAAGC,IAAKd,EAAGF,gBAAiBiB,UAAU,MAAzJ,KAEA,kBAACL,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,QAAxC,iBAA8D,IAAIK,KAAKjB,EAAGkB,YAAYC,kBAG1F,kBAACX,EAAA,EAAD,CAAML,UAAU,oBAChB,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,iBAAlB,aACA,kBAACD,EAAA,EAAD,CAAYE,MAAM,QAAlB,2BACA,kBAACF,EAAA,EAAD,CAAYE,MAAM,QAAQ,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKd,EAAGoB,UAAUvB,MAAOkB,UAAU,IAAIC,SAAU,KAC9F,kBAACN,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,MAAM,QAAxC,iBAA8D,IAAIK,KAAKjB,EAAGkB,YAAYC,wB,GA9BlFE,cCyBbC,E,kDAzBb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTvB,GAAI,MAHK,E,gMAQEpB,I,OAAToB,E,OACJC,KAAKuB,SAAS,CAACxB,O,qIAIf,OAAkB,MAAfC,KAAKsB,MAAMvB,GACL,8BAGP,yBAAKG,UAAU,OACb,kBAAC,EAAD,CAAeD,MAAOD,KAAKsB,MAAMvB,U,GAnBvBqB,aCClBI,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.4a104984.chunk.js","sourcesContent":["const link=\"https://covid19.mathdro.id/api\";\nconst link_co=\"https://covid19.mathdro.id/api/daily\";\nexport async function fetchData(){\n    let response = await fetch(link);\n    let data = await response.json();\n    let response_co = await fetch(link_co);\n    let data_co = await response_co.json(); \n    const conf_inc=data_co[data_co.length-1].confirmed.total;\n    const death_inc=data_co[data_co.length-1].deaths.total;\n    // console.log(data);\n    console.log(data_co);\n    data={...data,increase_confirmed:data.confirmed.value - conf_inc,increase_deaths:data.deaths.value-death_inc};\n    return data;\n}\n","import React, { Component } from 'react'\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\n// import styles from '.src/components/CardComponent.module.css'\nimport './CardComponent.css'\nclass CardComponent extends Component{\n    render(){\n            const df=this.props.props;\n            console.log(df);\n            return(\n                <div className=\"container-m\">\n                <Grid container spacing={3} justify='center'>\n                    <Card className=\"card-m infected\">\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Infected</Typography>\n                        <Typography align=\"left\">No. of cases confirmed:</Typography>\n                        <Typography align=\"left\"><CountUp start={0} end={df.confirmed.value} separator=\",\" duration={2} /> (+ <CountUp  start={0} end={df.increase_confirmed} separator=\",\"/>)</Typography>\n                        <Typography color=\"textSecondary\" align=\"left\">Last Updated: {new Date(df.lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                    </Card>\n\n                    <Card className=\"card-m deaths\">\n                    <CardContent >\n                        <Typography color=\"textSecondary\">Deaths</Typography>\n                        <Typography align=\"left\">No. of cases confirmed:</Typography>\n                        <Typography align=\"left\" ><CountUp start={0} end={df.deaths.value} separator=\",\" duration={2}/> (+ <CountUp start={0} end={df.increase_deaths} separator=\",\"/>)\n                        </Typography>\n                        <Typography color=\"textSecondary\" align=\"left\">Last Updated: {new Date(df.lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                    </Card>\n                    <Card className=\"card-m recovered\">\n                    <CardContent >\n                        <Typography color=\"textSecondary\">Recovered</Typography>\n                        <Typography align=\"left\">No. of cases confirmed:</Typography>\n                        <Typography align=\"left\" ><CountUp start={0} end={df.recovered.value} separator=\",\" duration={2}/></Typography>\n                        <Typography color=\"textSecondary\" align=\"left\">Last Updated: {new Date(df.lastUpdate).toDateString()}</Typography>\n                    </CardContent>\n                    </Card>\n                </Grid>\n                </div>\n            )\n    }\n}\n\n\nexport default CardComponent;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport {fetchData} from './api/api.js';\nimport CardComponent from './components/CardComponent.jsx'\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      df: null,\n    }\n  }\n\n  async componentDidMount(){\n    let df=await fetchData();\n    this.setState({df});\n\n  }\n  render(){\n    if(this.state.df==null)\n      return(<div></div>);\n    else{\n      return (\n      <div className=\"App\">\n        <CardComponent props={this.state.df} />  \n      </div>\n    )\n      }\n};\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}